#include "gtest/gtest.h"
#include "gmock/gmock.h"
#include <chrono>
#include <iostream>

#include "superpositeur/Circuit.hpp"
#include "superpositeur/DefaultOperations.hpp"

namespace superpositeur {

using namespace std::complex_literals;

using testing::ElementsAreArray;
using testing::DoubleNear;

namespace {
Circuit randomCircuit() {

    Circuit c;
    c.addInstruction(CircuitInstruction({ Matrix({ { 0.3753909512820288 + -0.41783923658236016i, -0.03628792967144374 + 0.07525828951801547i }, { 0.02493024441245668 + -0.04003049901882964i, 0.1585116177532563 + 0.42662575456605406i } }), Matrix({ { -0.1980557257392418 + 0.014225102841271958i, 0.11785532584711252 + 0.3682798145253186i }, { 0.05168708546480087 + -0.09692562940757252i, 0.1911474266891858 + 0.20837404801968365i } }), Matrix({ { 0.12534044762941246 + -0.15432301868311143i, 0.124771141178847 + 0.5872597824142164i }, { 0.051915601073746785 + -0.028657490604858435i, 0.35386137393269407 + 0.00809189771442903i } }), Matrix({ { 0.62101790206852 + 0.01741508777668585i, 0.24001794936487333 + -0.10727752227016285i }, { 0.1923650107749583 + -0.40590685013745376i, -0.038500271634545426 + -0.009073707166134745i } }) }, { QubitIndex{ 2 } }));

    c.addInstruction(CircuitInstruction({ default_operations::CNOT }, { QubitIndex{ 0 }, QubitIndex{ 2 } }));

    c.addInstruction(CircuitInstruction({ Matrix({ { -0.28757108063309156 + 0.09057968981366939i, -0.695640248841911 + -0.21920845745469836i, 0.10739805942018371 + -0.08471057666493564i, 0.3781482628750242 + -0.46413807866490037i }, { 0.16767856630926078 + -0.5625237722483978i, 0.06883801821870197 + 0.5564279624229701i, 0.020801034238955057 + 0.052853915911982796i, 0.5684664794564598 + -0.12132516729509941i }, { 0.31774619462610354 + 0.36127587232422487i, 0.2776950334363572 + -0.006519691499801028i, 0.6487652401452029 + -0.4511146413684224i, 0.2290280118863571 + -0.1204386781656459i }, { -0.1955228123067237 + -0.5429889751895055i, -0.274571100400522 + 0.03369301270906616i, 0.5457124781465543 + -0.2363486625702689i, -0.42795009792834304 + 0.23152798748589024i } }) }, { QubitIndex{ 2 }, QubitIndex{ 1 } }));


    return c;
}

TEST(RandomizedIntegrationTests, 3_3_2_100_30_20) {
    auto c = randomCircuit();
    
    auto s = c.execute();

    EXPECT_EQ(s.getReducedDensityMatrix({true, false, false}), Matrix({ { 1.0 + 3.469446951953614e-18i, 0.0 + 0.0i }, { 0.0 + 0.0i, 0.0 + 0.0i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({true, false, false}), ElementsAreArray({ DoubleNear(1.0, 1.0e-7), DoubleNear(0.0, 1.0e-7) }));

    EXPECT_EQ(s.getReducedDensityMatrix({false, true, false}), Matrix({ { 0.22185963176716395 + -6.938893903907228e-18i, -0.0942373031724446 + 0.027047938408336206i }, { -0.09423730317244464 + -0.027047938408336178i, 0.778140368232836 + 1.0408340855860843e-17i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({false, true, false}), ElementsAreArray({ DoubleNear(0.22185963176716395, 1.0e-7), DoubleNear(0.778140368232836, 1.0e-7) }));

    EXPECT_EQ(s.getReducedDensityMatrix({false, false, true}), Matrix({ { 0.3434904748844277 + -3.469446951953614e-18i, 0.2508927267987236 + 0.21711023480363567i }, { 0.2508927267987236 + -0.21711023480363567i, 0.6565095251155724 + 6.938893903907228e-18i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({false, false, true}), ElementsAreArray({ DoubleNear(0.3434904748844277, 1.0e-7), DoubleNear(0.6565095251155724, 1.0e-7) }));

    EXPECT_EQ(s.getReducedDensityMatrix({true, true, false}), Matrix({ { 0.22185963176716395 + -6.938893903907228e-18i, 0.0 + 0.0i, -0.0942373031724446 + 0.027047938408336206i, 0.0 + 0.0i }, { 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i }, { -0.09423730317244464 + -0.027047938408336178i, 0.0 + 0.0i, 0.778140368232836 + 1.0408340855860843e-17i, 0.0 + 0.0i }, { 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({true, true, false}), ElementsAreArray({ DoubleNear(0.22185963176716395, 1.0e-7), DoubleNear(0.0, 1.0e-7), DoubleNear(0.778140368232836, 1.0e-7), DoubleNear(0.0, 1.0e-7) }));

    EXPECT_EQ(s.getReducedDensityMatrix({true, false, true}), Matrix({ { 0.3434904748844277 + -3.469446951953614e-18i, 0.0 + 0.0i, 0.2508927267987236 + 0.21711023480363567i, 0.0 + 0.0i }, { 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i }, { 0.2508927267987236 + -0.21711023480363567i, 0.0 + 0.0i, 0.6565095251155724 + 6.938893903907228e-18i, 0.0 + 0.0i }, { 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i, 0.0 + 0.0i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({true, false, true}), ElementsAreArray({ DoubleNear(0.3434904748844277, 1.0e-7), DoubleNear(0.0, 1.0e-7), DoubleNear(0.6565095251155724, 1.0e-7), DoubleNear(0.0, 1.0e-7) }));

    EXPECT_EQ(s.getReducedDensityMatrix({false, true, true}), Matrix({ { 0.07136493811878163 + 0.0i, -0.062099488680567534 + -0.12315991871938674i, -0.0516912950437486 + 0.02850940885527317i, 0.02378598136395159 + -0.18071975053828254i }, { -0.06209948868056755 + 0.12315991871938674i, 0.27212553676564605 + -3.469446951953614e-18i, 0.005013012694767671 + -0.13588266875380586i, 0.3025840218424722 + 0.1886008259483625i }, { -0.05169129504374859 + -0.02850940885527317i, 0.0050130126947676825 + 0.13588266875380584i, 0.1504946936483823 + -6.938893903907228e-18i, -0.03213781449187706 + 0.15020785712772294i }, { 0.02378598136395159 + 0.18071975053828257i, 0.3025840218424722 + -0.1886008259483625i, -0.03213781449187708 + -0.15020785712772292i, 0.5060148314671901 + 1.3877787807814457e-17i } }));

    EXPECT_THAT(s.getReducedDensityMatrixDiagonal({false, true, true}), ElementsAreArray({ DoubleNear(0.07136493811878163, 1.0e-7), DoubleNear(0.27212553676564605, 1.0e-7), DoubleNear(0.1504946936483823, 1.0e-7), DoubleNear(0.5060148314671901, 1.0e-7) }));


}
}

}
